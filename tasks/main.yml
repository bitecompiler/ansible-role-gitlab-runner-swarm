---
- name: Check if the runner already exists
  community.docker.docker_container_info:
    name: gitlab-runner
  register: result

- name: Does container exist?
  ansible.builtin.debug:
    msg: "The container {{ 'exists' if result.exists else 'does not exist' }}"

- name: Start gitlab-runner in docker
  community.docker.docker_container:
    name: gitlab-runner
    image: gitlab/gitlab-runner:latest
    restart_policy: always
    detach: yes
    volumes:
      - gitlab-runner:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
  when: not result.exists
  tags:
  - runner
  - runner-start

- name: Check if the runner is registered
  community.docker.docker_container_exec:
    container: gitlab-runner
    command: /bin/bash -c "gitlab-runner list 2> >(grep -i '{{ ansible_facts['nodename'] }}')"
  register: registered
  tags:
    - runner
    - runner-register
    - runner-unregister

- name: Does container exist?
  ansible.builtin.debug:
    msg: "The runner for {{ ansible_facts['nodename'] }} {{ 'is not registered' if not registered.stdout else 'is registered' }}"

- name: Register gitlab-runner
  community.docker.docker_container_exec:
    container: gitlab-runner
    argv:
      - gitlab-runner
      - register
      - --non-interactive
      - --name 
      - "{{ ansible_facts['nodename'] }}"
      - --executor 
      - docker
      - --docker-image 
      - docker:latest
      - --docker-volumes 
      - /var/run/docker.sock:/var/run/docker.sock
      - --url 
      - "https://{{ gitlab_domain }}"
      - --registration-token 
      - "{{ gitlab_token }}"
      - --tag-list 
      - swarm-cluster,prod
  when: not registered.stdout
  tags:
  - runner
  - runner-register

- name: Un-register gitlab-runner
  community.docker.docker_container_exec:
    container: gitlab-runner
    argv:
      - gitlab-runner
      - unregister
      - -n 
      - "{{ ansible_facts['nodename'] }}"
  when: registered.stdout
  tags:
  - never
  - runner-unregister
